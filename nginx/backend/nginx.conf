# =================== ГЛОБАЛЬНЫЕ НАСТРОЙКИ NGINX ===================

user nginx;
# Указывает, под каким пользователем будут работать worker процессы Nginx
# nginx - стандартный пользователь в Docker образе nginx:stable-alpine
# Это важно для безопасности - процессы не работают от root

worker_processes auto;
# Количество worker процессов, которые будут обрабатывать запросы
# auto - Nginx автоматически определяет оптимальное количество по числу CPU ядер
# Например: 2 ядра = 2 worker процесса, 4 ядра = 4 worker процесса
# Можно указать конкретное число, например: worker_processes 2;

error_log /var/log/nginx/backend_error.log warn;
# Глобальный файл для записи ошибок всего Nginx сервера
# warn - уровень логирования (записывать ошибки уровня warning и выше)
# Уровни: debug, info, notice, warn, error, crit, alert, emerg

pid /var/run/nginx.pid;
# Файл, в который записывается PID (идентификатор процесса) главного процесса Nginx
# Используется системой для управления процессом (остановка, перезагрузка)
# Docker и системные скрипты используют этот файл для контроля Nginx

# =================== БЛОК СОБЫТИЙ (СОЕДИНЕНИЯ) ===================

events {
    worker_connections 1024;
    # Максимальное количество одновременных соединений для ОДНОГО worker процесса
    # При worker_processes auto (например, 2) и worker_connections 1024
    # Общий лимит соединений = 2 × 1024 = 2048 одновременных подключений
    # Включает соединения к клиентам, backend серверам, файлы и т.д.
}

# =================== HTTP КОНТЕКСТ (ВСЕ ВЕБ-НАСТРОЙКИ) ===================

http {
    include /etc/nginx/mime.types;
    # Подключает файл с определениями MIME-типов для различных расширений файлов
    # Например: .html → text/html, .css → text/css, .js → application/javascript
    # Без этого браузеры могут неправильно интерпретировать файлы

    default_type application/octet-stream;
    # MIME-тип по умолчанию для файлов с неизвестными расширениями
    # application/octet-stream - "двоичный поток", браузер предложит скачать файл
    # Используется когда расширение файла не найдено в mime.types

    sendfile on;
    # Включает оптимизированную передачу файлов через системный вызов sendfile()
    # Файлы передаются напрямую из ядра системы, минуя userspace
    # Значительно ускоряет отдачу статических файлов (изображения, CSS, JS)
    # Особенно эффективно для больших файлов

    keepalive_timeout 65;
    # Время жизни HTTP keep-alive соединений в секундах
    # Клиент может повторно использовать одно TCP соединение для нескольких HTTP запросов
    # 65 секунд - баланс между экономией ресурсов и освобождением соединений
    # Слишком большое значение = много "висящих" соединений
    # Слишком маленькое = постоянные переподключения

    include /etc/nginx/conf.d/*.conf;
    # Подключает ВСЕ файлы с расширением .conf из директории /etc/nginx/conf.d/
    # В вашем случае это файл default.conf с настройками server блока
    # Позволяет разделить конфигурацию на логические части
    # Nginx обработает файлы в алфавитном порядке

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;
}
