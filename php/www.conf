; Название пула процессов (можно создавать несколько пулов с разными настройками)
[www]

; Адрес, на котором PHP-FPM будет слушать запросы
; В данном случае используется Unix socket вместо TCP порта для лучшей производительности
listen = /var/run/php/php-fpm.sock

; Владелец socket файла (пользователь)
listen.owner = www-data

; Группа владельца socket файла
listen.group = www-data

; Права доступа к socket файлу в восьмеричной системе
; 0660 означает: владелец и группа могут читать/писать, остальные не имеют доступа
listen.mode = 0660

; Пользователь, от имени которого будут запускаться рабочие процессы PHP-FPM
user = www-data

; Группа, от имени котрой будут запускаться рабочие процессы PHP-FPM
group = www-data


; Режим управления процессами
; dynamic - количество процессов изменяется динамически в зависимости от нагрузки
; Альтернативы: static (фиксированное количество), ondemand (создаются по требованию)
pm = dynamic

; Максимальное количество дочерних процессов
; Это верхний лимит для всех процессов в пуле
pm.max_children = 20

; Количество процессов запускаемых при старте PHP-FPM
; Должно быть между pm.min_spare_servers и pm.max_spare_servers
pm.start_servers = 5

; Минимальное количество неактивных (spare) процессов
; PHP-FPM будет создавать новые процессы, если их количество упадет ниже этого значения
pm.min_spare_servers = 2

; Максимальное количество неактивных (spare) процессов
; PHP-FPM будет завершать лишние процессы, если их количество превысит это значение
pm.max_spare_servers = 8
