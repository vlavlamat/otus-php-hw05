; Включает возможность загружать файлы через HTTP-формы
file_uploads = On

; Разрешает использовать URL (http, ftp и др.) в качестве файловых путей в PHP-функциях
allow_url_fopen = On

; Максимальное количество памяти, которое может использовать скрипт
; 1024M - избыточно для данного приложения. 256M более чем достаточно.
memory_limit = 256M

; Максимально допустимый размер файла для загрузки через форму
upload_max_filesize = 20M

; Максимальное время выполнения одного скрипта, в секундах
; 60 секунд - слишком долго для API. Лучше установить 30 и контролировать
; длительные операции на уровне приложения, как мы и планируем.
max_execution_time = 30

; Часовой пояс по умолчанию для функций работы с датой и временем
date.timezone = "UTC"

; Максимальный общий размер данных, принимаемых методом POST (должно быть равно или больше upload_max_filesize)
post_max_size = 20m

; Максимальное количество входящих переменных (например, в $_POST)
max_input_vars = 10000

; --- НАСТРОЙКИ ДЛЯ PRODUCTION ---
; Отключаем PCOV. Сбор покрытия кода вызывает значительное падение производительности.
pcov.enabled = 0
pcov.directory = ""

; --- НАСТРОЙКИ OPCACHE ДЛЯ МАКСИМАЛЬНОЙ ПРОИЗВОДИТЕЛЬНОСТИ ---

; Загружает расширение OPcache как Zend-расширение
zend_extension=opcache

; Включает OPcache
opcache.enable=1

; Включаем OPcache для CLI-скриптов (полезно для composer и других команд)
opcache.enable_cli=1

; Объем памяти для кэша скомпилированных скриптов. 256MB - хороший выбор.
opcache.memory_consumption=256

; Увеличиваем буфер для хранения одинаковых строк. Помогает сэкономить память.
opcache.interned_strings_buffer=16

; Максимальное количество файлов в кэше. 10000 - хороший запас.
opcache.max_accelerated_files=10000

; !!! КЛЮЧЕВАЯ ОПТИМИЗАЦАЯ !!!
; Отключаем проверку временных меток файлов. PHP не будет проверять файлы
; на диске после их кэширования. Это дает максимальный прирост производительности.
; ВАЖНО: После каждого развертывания нового кода нужно очищать OPcache
; (например, командой service php-fpm reload).
opcache.validate_timestamps=0

; Эта настройка будет проигнорирована, так как validate_timestamps=0,
; но для ясности выставляем в 0.
opcache.revalidate_freq=0

; Использует более быстрый механизм освобождения памяти.
opcache.fast_shutdown=1