# docker/frontend/vue.dev.Dockerfile

# Используем официальный образ Node.js 22 версии на основе Alpine Linux
# Alpine - это минималистичный дистрибутив Linux, обеспечивающий малый размер образа
FROM node:22-alpine

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем только файлы package.json и package-lock.json
# Это позволяет кэшировать слой с установленными зависимостями и не переустанавливать
# их каждый раз, когда меняется код приложения, но не зависимости
COPY frontend/package*.json ./

# Устанавливаем npm зависимости
# По умолчанию npm install установит все зависимости, включая devDependencies,
# что нужно для режима разработки
RUN npm install

# Копируем все остальные файлы из директории frontend
# (исключая node_modules благодаря .dockerignore)
COPY frontend/ ./

# Открываем порт 5173 - стандартный порт для Vite dev-сервера
EXPOSE 5173

# Запускаем команду npm run dev с дополнительными параметрами
# Массив в CMD выполняется без оболочки, что считается лучшей практикой
# npm - исполняемый файл менеджера пакетов
# run - команда для запуска скриптов из package.json
# dev - имя скрипта, определенного в package.json для запуска dev-сервера
# -- - разделитель, после которого следуют аргументы для скрипта, а не для npm
# --host - параметр для Vite, разрешающий доступ извне (не только localhost)
# Это необходимо для доступа к dev-серверу из других контейнеров или с хост-машины
CMD ["npm", "run", "dev", "--", "--host"]
